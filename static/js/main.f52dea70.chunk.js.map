{"version":3,"sources":["logo.svg","stores/user.ts","volunteers/Login.tsx","volunteers/manage/Cat.tsx","volunteers/manage/Cats.tsx","volunteers/manage/Dogs.tsx","volunteers/manage/Manage.tsx","volunteers/manage/Volunteers.tsx","Routes.tsx","AppRouter.tsx","serviceWorker.ts","Navigation.tsx","stores/index.ts","index.tsx"],"names":["module","exports","login","username","password","a","Promise","res","store","user","loggedIn","firstName","lastName","permissions","admin","cats","dogs","localStorage","setItem","JSON","stringify","setTimeout","logout","Login","history","useHistory","useState","loading","setLoading","loginForm","updateLoginForm","doLogin","useCallback","push","routes","manage","route","Container","text","Form","Input","required","id","label","placeholder","onChange","v","target","value","type","Button","primary","onClick","content","Cat","cat","updateCat","Segment","vertical","name","gender","altered","microchipNumber","adopted","Group","attached","intake","from","moment","date","format","weight","age","color","breed","medicalProcedures","length","piled","map","medicalProcedure","i","key","Card","Content","Header","Meta","additionalDetails","Description","medicines","medicine","by","Date","now","subtract","unix","search","searchTerm","filters","filter","toLowerCase","includes","showAdopted","title","defaultFilters","Cats","results","setResults","setValue","selectedCat","setSelectedCat","showFilters","setShowFilters","setFilters","handleSearchChange","_","data","selectCat","result","find","clearCat","undefined","Grid","Column","width","className","Search","fluid","onResultSelect","onSearchChange","circular","icon","Radio","toggle","checked","Dogs","Manage","collect","Object","values","manageRoutes","hideInNav","location","pathname","split","activeRoute","setActiveRoute","useEffect","divided","celled","Row","columns","Menu","tabular","Item","active","component","Volunteers","home","exact","volunteers","AppA","src","logo","alt","AppRouter","path","Boolean","window","hostname","match","Navigation","doLogout","header","position","disabled","parse","getItem","initUserStore","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f52dea70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { store } from \"react-recollect\";\n\nexport type Permissions = {\n    dogs?: boolean;\n    cats?: boolean;\n    admin?: boolean;\n};\n\nexport type User = {\n    firstName: string;\n    lastName: string;\n    username: string;\n    permissions: Permissions;\n};\n\nexport type UserState = {\n    loggedIn: boolean;\n    user?: Partial<User>;\n};\n\nexport const initUserStore = () => {\n    const user: UserState = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\n    if (user.loggedIn) {\n        store.user = user;\n    } else {\n        store.user = {\n            loggedIn: false,\n            user: {},\n        };\n    }\n};\n\nexport const login = async (username: string, password: string) => {\n    // Do Login\n    return await new Promise(res => {\n        store.user!.loggedIn = true;\n        store.user!.user!.firstName = \"Volun\";\n        store.user!.user!.lastName = \"Teer\";\n        store.user!.user!.permissions = {\n            admin: true,\n            cats: true,\n            dogs: true,\n        };\n        store.user!.user!.username = username;\n        localStorage.setItem(\"user\", JSON.stringify(store.user));\n        setTimeout(res, 200);\n    });\n};\n\nexport const logout = async () => {\n    // Do logout\n    return await new Promise(res => {\n        store.user!.loggedIn = false;\n        store.user!.user = {};\n        localStorage.setItem(\"user\", \"{}\");\n        setTimeout(res, 200);\n    });\n};\n","import React, { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Button, Container, Form } from \"semantic-ui-react\";\nimport { login } from \"../stores/user\";\nimport { routes } from \"../Routes\";\n\nexport const Login = () => {\n    const history = useHistory();\n    const [loading, setLoading] = useState(false);\n    const [loginForm, updateLoginForm] = useState({ username: \"\", password: \"\" });\n\n    const doLogin = useCallback(async () => {\n        setLoading(true);\n        await login(loginForm.username, loginForm.password);\n        setLoading(false);\n        history.push(routes.manage.route);\n    }, [loginForm.username, loginForm.password, history]);\n    return (\n        <Container text>\n            <h1>Login</h1>\n            <Form loading={loading}>\n                <Form.Input\n                    required\n                    id=\"form-input-control-username\"\n                    label=\"Username\"\n                    placeholder=\"Username\"\n                    onChange={v => updateLoginForm({ ...loginForm, username: v.target.value })}\n                />\n                <Form.Input\n                    required\n                    id=\"form-input-control-password\"\n                    onChange={v => updateLoginForm({ ...loginForm, password: v.target.value })}\n                    type=\"password\"\n                    label=\"Password\"\n                    placeholder=\"Password\"\n                />\n                <Button primary id=\"form-button-login\" onClick={doLogin} content=\"Login\" />\n            </Form>\n        </Container>\n    );\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Card, Segment } from \"semantic-ui-react\";\nimport type { Cat as CatType } from \"./Cats\";\n\nexport const Cat = ({ cat, updateCat }: { cat: CatType; updateCat: (cat: CatType) => void }) => (\n    <div>\n        <Segment vertical>Name: {cat.name}</Segment>\n        <Segment vertical>Gender: {cat.gender}</Segment>\n        <Segment vertical>Altered?: {cat.altered ? \"Yes\" : \"No\"}</Segment>\n        <Segment vertical>Microchip Number: {cat.microchipNumber}</Segment>\n        {cat.adopted ? <Segment vertical>This cat has been adopted</Segment> : null}\n        <Segment.Group>\n            <Segment attached=\"top\">Intake</Segment>\n            <Segment>From: {cat.intake.from}</Segment>\n            <Segment>Intake Date: {moment(cat.intake.date).format(\"MM-DD-YYYY\")}</Segment>\n            <Segment>Intake Weight: {cat.intake.weight}</Segment>\n            <Segment>Intake Age: {cat.intake.age}</Segment>\n            <Segment>Cat Color: {cat.intake.color}</Segment>\n            <Segment>Cat Breed: {cat.intake.breed}</Segment>\n        </Segment.Group>\n        {cat.medicalProcedures.length ? (\n            <Segment.Group piled>\n                <Segment attached=\"top\">Medical Procedures</Segment>\n                {cat.medicalProcedures.map((medicalProcedure, i) => (\n                    <Segment key={i}>\n                        <Card>\n                            <Card.Content>\n                                <Card.Header>{medicalProcedure.type}</Card.Header>\n                                <Card.Meta>{moment(medicalProcedure.date).format(\"MM-DD-YYYY\")}</Card.Meta>\n                                {medicalProcedure.additionalDetails ? (\n                                    <Card.Description>{medicalProcedure.additionalDetails}</Card.Description>\n                                ) : null}\n                            </Card.Content>\n                        </Card>\n                    </Segment>\n                ))}\n            </Segment.Group>\n        ) : null}\n        {cat.medicines.length ? (\n            <Segment.Group piled>\n                <Segment attached=\"top\">Medicines Administered</Segment>\n                {cat.medicines.map((medicine, i) => (\n                    <Segment key={i}>\n                        <Card>\n                            <Card.Content>\n                                <Card.Header>{medicine.name}</Card.Header>\n                                <Card.Meta>{moment(medicine.date).format(\"MM-DD-YYYY\")}</Card.Meta>\n                                <Card.Content>Administered by {medicine.by}</Card.Content>\n                            </Card.Content>\n                        </Card>\n                    </Segment>\n                ))}\n            </Segment.Group>\n        ) : null}\n    </div>\n);\n","import React, { useCallback, useState } from \"react\";\nimport { Button, Grid, Radio, Search, Segment } from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport { Cat } from \"./Cat\";\n\nconst MedicalProcedureTypes = [\n    \"FVRCP 1\",\n    \"FVRCP 2\",\n    \"FVRCP 3\",\n    \"FVRCP Adult\",\n    \"FIV/LEUK Test\",\n    \"FECAL\",\n    \"Rabies\",\n    \"De-Wormer - Strongid\",\n    \"De-Wormer - Panacur\",\n    \"Capstar\",\n    \"Flea\",\n    \"Other\",\n] as const;\n\ntype Intake = {\n    date: number;\n    weight: string;\n    age: number;\n    breed: string;\n    color: string;\n    from: string;\n};\n\ntype MedicalProcedure = {\n    date: number;\n    type: typeof MedicalProcedureTypes[number];\n    additionalDetails?: string;\n};\n\ntype Medicine = {\n    name: string;\n    date: number;\n    by: string;\n};\n\nexport type Cat = {\n    id: number;\n    name: string;\n    gender: string;\n    altered: boolean;\n    adopted: boolean;\n    intake: Intake;\n    microchipNumber: number;\n    medicalProcedures: MedicalProcedure[];\n    medicines: Medicine[];\n};\n\nconst cats: Cat[] = [\n    {\n        id: 0,\n        name: \"Atlas\",\n        gender: \"Male\",\n        altered: true,\n        adopted: false,\n        intake: {\n            date: Date.now(),\n            weight: \"10lbs\",\n            age: 2,\n            breed: \"Domestic Short Hair\",\n            color: \"Cheetah Grey\",\n            from: \"Relinquished by Owner\",\n        },\n        microchipNumber: 1,\n        medicalProcedures: [\n            {\n                date: Date.now(),\n                type: \"Capstar\",\n            },\n        ],\n        medicines: [\n            {\n                name: \"Insulin\",\n                date: Date.now(),\n                by: \"Serena\",\n            },\n        ],\n    },\n    {\n        id: 1,\n        name: \"Danielle\",\n        gender: \"Female\",\n        altered: true,\n        adopted: true,\n        intake: {\n            date: moment().subtract(2, \"years\").unix(),\n            weight: \"15lbs\",\n            age: 4,\n            breed: \"Domestic Short Hair\",\n            color: \"Tortise-Shell Calico\",\n            from: \"Taken from Kill Shelter\",\n        },\n        microchipNumber: 2,\n        medicalProcedures: [\n            {\n                date: Date.now(),\n                type: \"De-Wormer - Panacur\",\n            },\n            {\n                date: moment().subtract(2, \"months\").unix(),\n                type: \"Rabies\",\n            },\n            {\n                date: moment().subtract(4, \"months\").unix(),\n                type: \"Other\",\n                additionalDetails: \"Something additional was done\",\n            },\n        ],\n        medicines: [],\n    },\n    {\n        id: 2,\n        name: \"Daisy\",\n        gender: \"Female\",\n        altered: true,\n        adopted: false,\n        intake: {\n            date: moment().subtract(1, \"years\").unix(),\n            weight: \"6lbs\",\n            age: 2,\n            breed: \"Domestic Short Hair\",\n            color: \"Calico\",\n            from: \"Surrender from Owner\",\n        },\n        microchipNumber: 3,\n        medicalProcedures: [\n            {\n                date: Date.now(),\n                type: \"FECAL\",\n            },\n            {\n                date: moment().subtract(5, \"months\").unix(),\n                type: \"Flea\",\n            },\n            {\n                date: moment().subtract(7, \"months\").unix(),\n                type: \"Other\",\n                additionalDetails: \"Something additional was done\",\n            },\n        ],\n        medicines: [],\n    },\n];\n\nconst search = async (searchTerm: string, filters: typeof defaultFilters) => {\n    await new Promise(res => setTimeout(res, 500));\n    return cats\n        .filter(cat => {\n            if (cat.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n                if (!filters.showAdopted && cat.adopted) {\n                    return false;\n                }\n\n                return true;\n            }\n            return false;\n        })\n        .map(cat => ({ title: cat.name }));\n};\n\nconst defaultFilters = {\n    showAdopted: false,\n};\n\nexport const Cats = () => {\n    const [loading, setLoading] = useState(false);\n    const [results, setResults] = useState<{ title: string; description?: string }[]>([]);\n    const [value, setValue] = useState<string | undefined>();\n    const [selectedCat, setSelectedCat] = useState<Cat | undefined>();\n    const [showFilters, setShowFilters] = useState(false);\n    const [filters, setFilters] = useState(defaultFilters);\n\n    const handleSearchChange = useCallback(\n        async (_, data) => {\n            setValue(data.value);\n            setLoading(true);\n            setResults(await search(data.value, filters));\n            setLoading(false);\n        },\n        [filters],\n    );\n    const selectCat = useCallback((_, data) => {\n        setValue(data.result.title);\n        setSelectedCat(cats.find(cat => cat.name === data.result.title));\n    }, []);\n    const clearCat = useCallback(() => {\n        setValue(undefined);\n        setSelectedCat(undefined);\n    }, []);\n\n    return (\n        <>\n            <Grid.Column width={8}>\n                <div>\n                    <h3>Search for a Cat</h3>\n                    <div className=\"search\">\n                        <Search\n                            fluid\n                            loading={loading}\n                            onResultSelect={selectCat}\n                            onSearchChange={handleSearchChange}\n                            results={results}\n                            value={value}\n                        />\n                        {selectedCat ? (\n                            <Button className=\"clear-search\" color=\"teal\" circular onClick={clearCat} icon=\"x\" />\n                        ) : null}\n                    </div>\n                </div>\n                {selectedCat ? <Cat cat={selectedCat} updateCat={() => null} /> : null}\n            </Grid.Column>\n            <Grid.Column width={4} className=\"filters\">\n                <Button icon=\"filter\" color=\"teal\" onClick={() => setShowFilters(!showFilters)} />\n                <div className=\"filter-item\">\n                    {showFilters ? (\n                        <Radio\n                            toggle\n                            label=\"Show Adopted Cats\"\n                            checked={filters.showAdopted}\n                            onChange={(_, { checked }) => setFilters({ ...filters, showAdopted: !!checked })}\n                        />\n                    ) : null}\n                </div>\n            </Grid.Column>\n        </>\n    );\n};\n","import React from \"react\";\n\nexport const Dogs = () => null;\n","import React, { useEffect, useState } from \"react\";\nimport { collect, WithStoreProp } from \"react-recollect\";\nimport { useHistory } from \"react-router\";\nimport { Container, Grid, Menu } from \"semantic-ui-react\";\nimport { manageRoutes } from \"../../Routes\";\nimport \"./Manage.style.scss\";\n\nexport const Manage = collect(({ store }: WithStoreProp) => {\n    const history = useHistory();\n    const routes = Object.values(manageRoutes).filter(route => !route.hideInNav?.(store));\n    const [activeRoute, setActiveRoute] = useState(\n        manageRoutes[history.location.pathname.split(\"/\")[3]?.toLowerCase()] || routes[0] || manageRoutes.cats,\n    );\n    useEffect(() => history.push(activeRoute.route), [activeRoute, history]);\n\n    return (\n        <Container>\n            <Grid divided=\"vertically\" celled>\n                <Grid.Row columns={2}>\n                    <Grid.Column width={4}>\n                        <Menu fluid vertical tabular>\n                            {routes.map(route => (\n                                <Menu.Item\n                                    key={route.name}\n                                    name={route.name}\n                                    active={activeRoute.name === route.name}\n                                    onClick={() => setActiveRoute(route)}\n                                />\n                            ))}\n                        </Menu>\n                    </Grid.Column>\n\n                    {activeRoute.component?.()}\n                </Grid.Row>\n            </Grid>\n        </Container>\n    );\n});\n","import React from \"react\";\n\nexport const Volunteers = () => null;\n","import React from \"react\";\nimport { Store } from \"react-recollect\";\nimport { Login } from \"./volunteers/Login\";\nimport { Cats } from \"./volunteers/manage/Cats\";\nimport { Dogs } from \"./volunteers/manage/Dogs\";\nimport { Manage } from \"./volunteers/manage/Manage\";\nimport { Volunteers } from \"./volunteers/manage/Volunteers\";\n\nexport type Route = {\n    route: string;\n    name: string;\n    component?: () => React.ReactElement;\n    hideInNav?: (store: Store) => boolean;\n    exact: boolean;\n};\n\ntype Routes = { [key: string]: Route };\n\nexport const routes: Routes = {\n    home: {\n        route: \"/home\",\n        name: \"Home\",\n        exact: true,\n    },\n    cats: {\n        route: \"/cats\",\n        name: \"Cats\",\n        exact: true,\n    },\n    dogs: {\n        route: \"/dogs\",\n        name: \"Dogs\",\n        exact: true,\n    },\n    login: {\n        route: \"/login\",\n        name: \"Login\",\n        component: () => <Login />,\n        hideInNav: (store: Store) => !!store.user?.loggedIn,\n        exact: true,\n    },\n    manage: {\n        route: \"/manage\",\n        name: \"Manage Pets\",\n        component: () => <Manage />,\n        hideInNav: (store: Store) => !store.user?.loggedIn,\n        exact: false,\n    },\n};\n\nexport const manageRoutes: Routes = {\n    cats: {\n        route: \"/manage/cats\",\n        name: \"Manage Cats\",\n        component: () => <Cats />,\n        hideInNav: (store: Store) => !store.user?.user?.permissions?.cats,\n        exact: true,\n    },\n    dogs: {\n        route: \"/manage/dogs\",\n        name: \"Manage Dogs\",\n        component: () => <Dogs />,\n        hideInNav: (store: Store) => !store.user?.user?.permissions?.dogs,\n        exact: true,\n    },\n    volunteers: {\n        route: \"/manage/volunteers\",\n        name: \"Manage Volunteers\",\n        component: () => <Volunteers />,\n        hideInNav: (store: Store) => !store.user?.user?.permissions?.admin,\n        exact: true,\n    },\n};\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport \"./App.css\";\nimport logo from \"./logo.svg\";\nimport { routes } from \"./Routes\";\n\nfunction AppA() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </header>\n        </div>\n    );\n}\n\nexport const AppRouter = () => {\n    return (\n        <Switch>\n            {Object.values(routes).map(({ route, component, exact }) => (\n                <Route path={route} exact={exact} key={route}>\n                    {component?.() || <AppA />}\n                </Route>\n            ))}\n        </Switch>\n    );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { collect, WithStoreProp } from \"react-recollect\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Menu } from \"semantic-ui-react\";\nimport { routes } from \"./Routes\";\nimport { logout } from \"./stores/user\";\n\nexport const Navigation = collect(({ store }: WithStoreProp) => {\n    const history = useHistory();\n    const [activeRoute, setActiveRoute] = useState(\n        routes[history.location.pathname.split(\"/\")[1].toLowerCase()] || routes.home,\n    );\n    useEffect(() => history.push(activeRoute.route), [activeRoute, history]);\n\n    const [loading, setLoading] = useState(false);\n    const doLogout = useCallback(async () => {\n        setLoading(true);\n        await logout();\n        setLoading(false);\n        setActiveRoute(routes.home);\n    }, [history]);\n\n    return (\n        <Menu>\n            <Menu.Item header>Pet Rescue By Judy</Menu.Item>\n            {Object.values(routes).map(route =>\n                !route.hideInNav?.(store) ? (\n                    <Menu.Item\n                        key={route.name}\n                        name={route.name}\n                        active={activeRoute.name === route.name}\n                        onClick={() => setActiveRoute(route)}\n                    />\n                ) : null,\n            )}\n            {store.user?.user?.username ? (\n                <Menu.Menu position=\"right\">\n                    <Menu.Item>{store.user.user.username}</Menu.Item>\n                    <Menu.Item disabled={loading}>\n                        <Button disabled={loading} primary onClick={doLogout}>\n                            Logout\n                        </Button>\n                    </Menu.Item>\n                </Menu.Menu>\n            ) : null}\n        </Menu>\n    );\n});\n","import { initUserStore } from \"./user\";\n\nexport const initStore = () => {\n    initUserStore();\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.style.scss\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { AppRouter } from \"./AppRouter\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Navigation } from \"./Navigation\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { initStore } from \"./stores\";\n\ninitStore();\nReactDOM.render(\n    <React.Fragment>\n        <Router>\n            <Navigation />\n            <AppRouter />\n        </Router>\n    </React.Fragment>,\n    document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}